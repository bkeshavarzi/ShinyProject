colnames(df_traffic_year)[8]="Long"
df_traffic_year=df_traffic_year %>% select(STATE_CODE_EXP,Lat,Long,ELEVATION,ESAL,YEAR)
df=Andrew
class(df$Lat)
class(df$Long)
class(df$Speed_kt)
class(df_traffic_year$Lat)
class(df_traffic_year$Long)
class(df_traffic_year$ESAL)
geo_traffic=gvisMap(df_traffic_year, "LatLong", sizevar='ESAL')
GeoMarker <- gvisGeoChart(Andrew, "LatLong", sizevar='Speed_kt',colorvar="Pressure_mb",options=list(region="US"))
GeoMarker <- gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',colorvar="ELEVATION",options=list(region="US"))
GeoMarker <- gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',options=list(region="US"))
GeoMarker <- gvisGeoChart(df_traffic_year, "LatLong",options=list(region="US"))
GeoMarker <- gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',options=list(region="US"))
df_traffic=read.csv("Traffic.csv",stringsAsFactors = FALSE)[,seq(1,6)]
df_gps=read.csv('GPS.csv',stringsAsFactors = FALSE)[,c(1,2,3,4,5,9)]
year=2001 #input from dropdown menu
df_traffic_year=inner_join(df_traffic %>% filter(YEAR==year),df_gps,by.x=c("STATE_CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP_ID"))
colnames(df_traffic_year)[6]="ESAL"
colnames(df_traffic_year)[7]="Lat"
colnames(df_traffic_year)[8]="Long"
df_traffic_year=df_traffic_year %>% select(STATE_CODE_EXP,Lat,Long,ELEVATION,ESAL,YEAR)
df_traffic_year[,5]=df_traffic_year[,5]/1e6
geo_traffic=gvisMap(df_traffic_year, "LatLong", sizevar='ESAL',options=list(region="US"))
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',options=list(region="US"))
sum(is.na(df_traffic_year))
df_traffic_year[,1]=NULL
View(df_traffic_year)
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',options=list(region="US"))
length(df_traffic_year$Lat)
length(df_traffic_year$Long)
length(df_traffic_year$ESAL)
length(df_traffic_year$ELEVATION)
length(df_traffic_year$YEAR)
class(df_traffic_year)
class(df_traffic_year[,])
class(df_traffic_year[,1])
class(df_traffic_year[,2])
class(df_traffic_year[,3])
class(df_traffic_year[,4])
class(df_traffic_year[,5])
class(df_traffic_year[,6])
df_traffic=read.csv("Traffic.csv",stringsAsFactors = FALSE)[,seq(1,6)]
df_gps=read.csv('GPS.csv',stringsAsFactors = FALSE)[,c(1,2,3,4,5,9)]
year=2001 #input from dropdown menu
df_traffic_year=inner_join(df_traffic %>% filter(YEAR==year),df_gps,by.x=c("STATE_CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP_ID"))
colnames(df_traffic_year)[6]="ESAL"
colnames(df_traffic_year)[7]="Lat"
colnames(df_traffic_year)[8]="Long"
df_traffic_year=df_traffic_year %>% select(STATE_CODE_EXP,Lat,Long,ELEVATION,ESAL,YEAR)
dff=cbind(df_traffic_year[,1],df_traffic_year[,2])
dff=cbind(df_traffic_year[,1],df_traffic_year[,3])
dff=cbind(df_traffic_year[,1],df_traffic_year[,4])
dff=cbind(df_traffic_year[,1],df_traffic_year[,5])
View(dff)
dff=cbind(df_traffic_year)
geo_traffic=gvisMap(dff, "LatLong", sizevar='ESAL',options=list(region="US"))
geo_traffic=gvisGeoChart(dff, "LatLong", sizevar='ESAL',options=list(region="US"))
geo_traffic=gvisGeoChart(dff[1:10,], "LatLong", sizevar='ESAL',options=list(region="US"))
geo_traffic=gvisGeoChart(dff[1:2,], "LatLong", sizevar='ESAL',options=list(region="US"))
dim(dff)
rm(dff,df)
df=Andrew
View(df)
rm(dff,df)
library(googleVis)
df=Andrew
View(df)
paste("Behrooz","Behnam",sep=":")
df_traffic_year %>% mutate(LatLong=paste(Lat,Long,sep=":"))
View(df_traffic_year)
df_traffic_year=df_traffic_year %>% mutate(LatLong=paste(Lat,Long,sep=":"))
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',options=list(region="US"))
plot(geo_traffic)
plot(geo_traffic)
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',colorvar="ELEVATION",options=list(region="US"))
plot(geo_traffic)
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',hovervar="ELEVATION",options=list(region="US",enableScrollWheel=TRUE))
plot(geo_traffic)
df_traffic=read.csv("Traffic.csv",stringsAsFactors = FALSE)[,seq(1,6)]
df_gps=read.csv('GPS.csv',stringsAsFactors = FALSE)[,c(1,2,3,4,5,9)]
year=2001 #input from dropdown menu
df_traffic_year=inner_join(df_traffic %>% filter(YEAR==year),df_gps,by.x=c("STATE_CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP_ID"))
colnames(df_traffic_year)[6]="ESAL"
colnames(df_traffic_year)[7]="Lat"
colnames(df_traffic_year)[8]="Long"
df_traffic_year=df_traffic_year %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
df_traffic_year=df_traffic_year %>% select(STATE_CODE_EXP,Lat,Long,ELEVATION,ESAL,YEAR)
df_traffic_year=df_traffic_year %>% mutate(LatLong=paste(Lat,Long,sep=":"))
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',hovervar="ELEVATION",options=list(region="US",enableScrollWheel=TRUE))
plot(geo_traffic)
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',hovervar="ELEVATION",options=list(region="US",displayMode="regions",resolution="provinces",width=600, height=400))
plot(geo_traffic)
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',hovervar="ELEVATION",options=list(region="US",displayMode="Markers",resolution="provinces",width=600, height=400))
plot(geo_traffic)
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',options=list(region="US",displayMode="Markers",resolution="provinces",width=600, height=400))
plot(geo_traffic)
options=list(region="US",displayMode="regions",resolution="provinces",width=600, height=400))
el=as.character(df_traffic_year$ESAL)
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',hovervar=as.character(df_traffic_year$ESAL),options=list(region="US",displayMode="Markers",resolution="provinces",width=600, height=400))
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',hovervar=as.character(ELEVATION),options=list(region="US",displayMode="Markers",resolution="provinces",width=600, height=400))
plot(geo_traffic)
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',hovervar="S_ELEVATION",options=list(region="US",displayMode="Markers",resolution="provinces",width=600, height=400))
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',options=list(region="US",displayMode="Markers",resolution="provinces",width=600, height=400))
plot(geo_traffic)
df_traffic_year[7]=as.character(df_traffic_year$ELEVATION)
df_traffic=read.csv("Traffic.csv",stringsAsFactors = FALSE)[,seq(1,6)]
df_gps=read.csv('GPS.csv',stringsAsFactors = FALSE)[,c(1,2,3,4,5,9)]
year=2001 #input from dropdown menu
df_traffic_year=inner_join(df_traffic %>% filter(YEAR==year),df_gps,by.x=c("STATE_CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP_ID"))
colnames(df_traffic_year)[6]="ESAL"
colnames(df_traffic_year)[7]="Lat"
colnames(df_traffic_year)[8]="Long"
df_traffic_year=df_traffic_year %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
df_traffic_year=df_traffic_year %>% select(STATE_CODE_EXP,Lat,Long,ELEVATION,ESAL,YEAR)
df_traffic_year=df_traffic_year %>% mutate(LatLong=paste(Lat,Long,sep=":"))
View(df_traffic_year)
df_traffic_year[8]=as.character(df_traffic_year$ELEVATION)
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',hovervar='V8',
options=list(region="US",displayMode="Markers",resolution="provinces",width=600, height=400))
plot(geo_traffic)
View(df_mera_shrp)
rm(list=ls())
library(tidyverse)
library(googleVis)
rm(list=ls())
df_pavement_SHRP=read.csv("PavementStructure_SHRP_Info.csv",stringsAsFactors = FALSE)
df_pavement_info=read.csv("PavementStructure_Pavement_Info.csv")
Out_of_US=c("Alberta","British Columbia","New Brunswick","Newfoundland","Nova Scotia","Ontario","Prince Edward Island","Quebec","Saskatchewan","Manitoba")
df_pavement_info=df_pavement_info %>% filter(!(STATE_CODE_EXP %in% Out_of_US))%>%select(STATE_CODE_EXP,SHRP_ID,CONSTRUCTION_NO,LAYER_NO,LAYER_TYPE,REPR_THICKNESS)
df_pavement_SHRP=df_pavement_SHRP %>% filter(!(STATE_CODE_EXP %in% Out_of_US))%>% select(STATE_CODE_EXP,STATE_CODE,SHRP_ID,START_DATE,END_DATE)
df_pavement_SHRP$START_DATE=as.Date(df_pavement_SHRP$START_DATE,"%m/%d/%Y")
df_pavement_SHRP$END_DATE=as.Date(df_pavement_SHRP$END_DATE,"%m/%d/%Y")
index=substring(df_pavement_SHRP$END_DATE,7,10)=="2050"
df_pavement_SHRP$END_DATE=str_replace(df_pavement_SHRP$END_DATE,"2050","2005")
#Find AC pavemetns
df_ac=df_pavement_info %>% filter(LAYER_TYPE=="AC") %>% group_by(STATE_CODE_EXP,SHRP_ID) %>% summarise(n_=n()) %>% group_by(STATE_CODE_EXP) %>% summarise(number=n())
colnames(df_ac)=c("States","Number")
#Find PC pavemetns
df_pc=df_pavement_info %>% filter(LAYER_TYPE=="PC") %>% group_by(STATE_CODE_EXP,SHRP_ID) %>% summarise(n_=n()) %>% group_by(STATE_CODE_EXP) %>% summarise(number=n())
colnames(df_pc)=c("States","Number")
geo_ac=gvisGeoChart(df_ac, "States", "Number",options=list(region="US", displayMode="regions", resolution="provinces",width=450, height=300))
plot(geo_ac)
geo_pc=gvisGeoChart(df_pc, "States", "Number",options=list(region="US", displayMode="regions", resolution="provinces",width=450, height=300))
plot(geo_pc)
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_temp_month=read.csv("MERRA_TEMP_MONTH.csv",stringsAsFactors = FALSE)[,1:4]
df_mera_temp_month[,5]=1.8*df_mera_temp_month[,4]+32
View(df_mera_temp_month)
colnames(df_mera_temp_month)[5]="Average Temperature"
year=2001 #input from slider
month=3 #input from slider
df_mera_temp_month=inner_join(df_mera_temp_month %>% filter(YEAR==year & MONTH==month),df_mera_shrp,by="MERRA_ID")
View(df_pavement_info)
View(df_pavement_SHRP)
df_gps=read.csv('GPS.csv',stringsAsFactors = FALSE)[,c(1,2,3,4,5,9)]
View(df_gps)
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_temp_month=read.csv("MERRA_TEMP_MONTH.csv",stringsAsFactors = FALSE)[,1:4]
df_mera_temp_month[,5]=1.8*df_mera_temp_month[,4]+32
colnames(df_mera_temp_month)[5]="Average Temperature"
year=2001 #input from slider
month=3 #input from slider
df_mera_temp_month=inner_join(df_mera_temp_month %>% filter(YEAR==year & MONTH==month),df_mera_shrp,by="MERRA_ID")
df_mera_temp_month=inner_join(df_mera_temp_month,df_gps,by.x=c("STATE CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP"))
geo_temperature=gvisGeoChart(df_mera_temp_month,"STATE_CODE_EXP","Average Temperature",options=list(region="US", displayMode="regions",resolution="provinces"))
df_mera_temp_month=df_mera_temp_month %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_temp_month=read.csv("MERRA_TEMP_MONTH.csv",stringsAsFactors = FALSE)[,1:4]
df_mera_temp_month[,5]=1.8*df_mera_temp_month[,4]+32
colnames(df_mera_temp_month)[5]="Average Temperature"
year=2001 #input from slider
month=3 #input from slider
df_mera_temp_month=inner_join(df_mera_temp_month %>% filter(YEAR==year & MONTH==month),df_mera_shrp,by="MERRA_ID")
df_mera_temp_month=inner_join(df_mera_temp_month,df_gps,by.x=c("STATE CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP"))
df_mera_temp_month=df_mera_temp_month %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))[,c(4,11)]
View(df_mera_temp_month)
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_temp_month=read.csv("MERRA_TEMP_MONTH.csv",stringsAsFactors = FALSE)[,1:4]
df_mera_temp_month[,5]=1.8*df_mera_temp_month[,4]+32
colnames(df_mera_temp_month)[5]="Average Temperature"
year=2001 #input from slider
month=3 #input from slider
df_mera_temp_month=inner_join(df_mera_temp_month %>% filter(YEAR==year & MONTH==month),df_mera_shrp,by="MERRA_ID")
df_mera_temp_month=inner_join(df_mera_temp_month,df_gps,by.x=c("STATE CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP"))
df_mera_temp_month=df_mera_temp_month %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))[,c(4,11)]
geo_temperature=gvisGeoChart(df_mera_temp_month,"STATE_CODE_EXP","Average Temperature",options=list(region="US", displayMode="regions",resolution="provinces"))
plot(geo_temperature)
View(df_mera_temp_month)
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_temp_month=read.csv("MERRA_TEMP_MONTH.csv",stringsAsFactors = FALSE)[,1:4]
df_mera_temp_month[,5]=1.8*df_mera_temp_month[,4]+32
colnames(df_mera_temp_month)[5]="Average Temperature"
year=2001 #input from slider
month=3 #input from slider
df_mera_temp_month=inner_join(df_mera_temp_month %>% filter(YEAR==year & MONTH==month),df_mera_shrp,by="MERRA_ID")
df_mera_temp_month=inner_join(df_mera_temp_month,df_gps,by.x=c("STATE CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP"))
df_mera_temp_month=df_mera_temp_month %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_temp_month=read.csv("MERRA_TEMP_MONTH.csv",stringsAsFactors = FALSE)[,1:4]
df_mera_temp_month[,5]=1.8*df_mera_temp_month[,4]+32
colnames(df_mera_temp_month)[5]="Average Temperature"
year=2001 #input from slider
month=3 #input from slider
df_mera_temp_month=inner_join(df_mera_temp_month %>% filter(YEAR==year & MONTH==month),df_mera_shrp,by="MERRA_ID")
df_mera_temp_month=inner_join(df_mera_temp_month,df_gps,by.x=c("STATE CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP"))
df_mera_temp_month=df_mera_temp_month %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))[,c(5,12)]
df_mera_temp_month=df_mera_temp_month %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))
View(df_mera_temp_month)
rm(df_mera_temp_month)
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_temp_month=read.csv("MERRA_TEMP_MONTH.csv",stringsAsFactors = FALSE)[,1:4]
df_mera_temp_month[,5]=1.8*df_mera_temp_month[,4]+32
colnames(df_mera_temp_month)[5]="Average Temperature"
year=2001 #input from slider
month=3 #input from slider
df_mera_temp_month=inner_join(df_mera_temp_month %>% filter(YEAR==year & MONTH==month),df_mera_shrp,by="MERRA_ID")
df_mera_temp_month=inner_join(df_mera_temp_month,df_gps,by.x=c("STATE CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP"))
View(df_mera_temp_month)
df_mera_temp_month=df_mera_temp_month %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))
df_mera_temp_month=df_mera_temp_month[,c(5,11,12)]
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_temp_month=read.csv("MERRA_TEMP_MONTH.csv",stringsAsFactors = FALSE)[,1:4]
df_mera_temp_month[,5]=1.8*df_mera_temp_month[,4]+32
colnames(df_mera_temp_month)[5]="AT"
year=2001 #input from slider
month=3 #input from slider
df_mera_temp_month=inner_join(df_mera_temp_month %>% filter(YEAR==year & MONTH==month),df_mera_shrp,by="MERRA_ID")
df_mera_temp_month=inner_join(df_mera_temp_month,df_gps,by.x=c("STATE CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP"))
df_mera_temp_month=df_mera_temp_month %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))
df_mera_temp_month=df_mera_temp_month[,c(5,11,12)]
geo_temperature=gvisGeoChart(df_mera_temp_month,"LatLong",sizevar='AT',options=list(region="US", displayMode="regions",resolution="provinces"))
plot(geo_temperature)
geo_temperature=gvisGeoChart(df_mera_temp_month,"LatLong",sizevar='AT',options=list(region="US", displayMode="Markers",resolution="provinces"))
plot(geo_temperature)
geo_temperature=gvisGeoChart(df_mera_temp_month,"LatLong",colorvar ='AT',options=list(region="US", displayMode="Markers",resolution="provinces"))
plot(geo_temperature)
geo_temperature=gvisGeoChart(df_mera_temp_month,"LatLong",colorvar ='AT',options=list(region="US",resolution="provinces"))
plot(geo_temperature)
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_shrp=df_mera_shrp %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
df_mera_temp_month=read.csv("MERRA_TEMP_MONTH.csv",stringsAsFactors = FALSE)[,1:4]
df_mera_temp_month[,5]=1.8*df_mera_temp_month[,4]+32
colnames(df_mera_temp_month)[5]="AT"
year=2001 #input from slider
month=3 #input from slider
df_mera_temp_month=inner_join(df_mera_temp_month %>% filter(YEAR==year & MONTH==month),df_mera_shrp,by="MERRA_ID")
df_mera_temp_month=inner_join(df_mera_temp_month,df_gps,by.x=c("STATE CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP"))
df_mera_temp_month=df_mera_temp_month %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))
df_mera_temp_month=df_mera_temp_month[,c(5,11,12)]
geo_temperature=gvisGeoChart(df_mera_temp_month,"LatLong",colorvar ='AT',options=list(region="US",resolution="provinces"))
plot(geo_temperature)
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_shrp=df_mera_shrp %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
df_mera_temp_month=read.csv("MERRA_TEMP_MONTH.csv",stringsAsFactors = FALSE)[,1:4]
df_mera_temp_month[,5]=1.8*df_mera_temp_month[,4]+32
colnames(df_mera_temp_month)[5]="AT"
year=2001 #input from slider
month=3 #input from slider
df_mera_temp_month=inner_join(df_mera_temp_month %>% filter(YEAR==year & MONTH==month),df_mera_shrp,by="MERRA_ID")
df_mera_temp_month=inner_join(df_mera_temp_month,df_gps,by.x=c("STATE CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP"))
df_mera_temp_month=df_mera_temp_month %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))
df_mera_temp_month=df_mera_temp_month[,c(5,11,12)]
geo_temperature=gvisGeoChart(df_mera_temp_month,"LatLong",colorvar ='AT',sizevar='ELEVATION',options=list(region="US",resolution="provinces"))
plot(geo_temperature)
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_shrp=df_mera_shrp %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
df_mera_temp_month=read.csv("MERRA_TEMP_MONTH.csv",stringsAsFactors = FALSE)[,1:4]
df_mera_temp_month=df_mera_temp_month %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
df_mera_temp_month[,5]=1.8*df_mera_temp_month[,4]+32
colnames(df_mera_temp_month)[5]="AT"
year=2001 #input from slider
month=3 #input from slider
df_mera_temp_month=inner_join(df_mera_temp_month %>% filter(YEAR==year & MONTH==month),df_mera_shrp,by="MERRA_ID")
df_mera_temp_month=inner_join(df_mera_temp_month,df_gps,by.x=c("STATE CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP"))
df_mera_temp_month=df_mera_temp_month %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))
df_mera_temp_month=df_mera_temp_month[,c(5,11,12)]
geo_temperature=gvisGeoChart(df_mera_temp_month,"LatLong",colorvar ='AT',sizevar='ELEVATION',options=list(region="US",resolution="provinces"))
plot(geo_temperature)
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_shrp=df_mera_shrp %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
df_mera_temp_month=read.csv("MERRA_TEMP_MONTH.csv",stringsAsFactors = FALSE)[,1:4]
View(df_mera_temp_month)
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_shrp=df_mera_shrp %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
df_mera_temp_month=read.csv("MERRA_TEMP_MONTH.csv",stringsAsFactors = FALSE)
df_mera_temp_month=df_mera_temp_month %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_shrp=df_mera_shrp %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
View(df_mera_shrp)
df_mera_temp_month=read.csv("MERRA_TEMP_MONTH.csv",stringsAsFactors = FALSE)
df_mera_temp_month[,5]=1.8*df_mera_temp_month[,4]+32
colnames(df_mera_temp_month)[5]="AT"
year=2001 #input from slider
month=3 #input from slider
df_mera_temp_month=inner_join(df_mera_temp_month %>% filter(YEAR==year & MONTH==month),df_mera_shrp,by="MERRA_ID")
df_mera_temp_month=inner_join(df_mera_temp_month,df_gps,by.x=c("STATE CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP"))
df_mera_temp_month=inner_join(df_mera_temp_month,df_gps,by.x=c("STATE CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP"))
df_mera_temp_month=df_mera_temp_month %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
df_mera_temp_month=df_mera_temp_month %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))
df_mera_temp_month=df_mera_temp_month[,c(5,11,12)]
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_shrp=df_mera_shrp %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
df_mera_temp_month=read.csv("MERRA_TEMP_MONTH.csv",stringsAsFactors = FALSE)
df_mera_shrp=read.csv("MERA_SHRP.csv",stringsAsFactors = FALSE)
df_mera_temp_month=read.csv("MERRA_TEMP_MONTH.csv",stringsAsFactors = FALSE)
df_mera_temp_month[,5]=1.8*df_mera_temp_month[,4]+32
colnames(df_mera_temp_month)[5]="AT"
year=2001 #input from slider
month=3 #input from slider
df_mera_temp_month=inner_join(df_mera_temp_month %>% filter(YEAR==year & MONTH==month),df_mera_shrp,by="MERRA_ID")
df_mera_temp_month=inner_join(df_mera_temp_month,df_gps,by.x=c("STATE CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP"))
df_mera_temp_month=df_mera_temp_month %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
x=unique(df_mera_temp_month$STATE_CODE_EXP)
View(x)
df_mera_temp_month=df_mera_temp_month %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))
df_mera_temp_month=df_mera_temp_month[,c(5,13,14)]
geo_temperature=gvisGeoChart(df_mera_temp_month,"LatLong",colorvar ='AT',sizevar='ELEVATION',options=list(region="US",resolution="provinces"))
plot(geo_temperature)
geo_temperature=gvisGeoChart(df_mera_temp_month,"LatLong",colorvar ='AT',sizevar='ELEVATION',options=list(region="US",resolution="metros"))
plot(geo_temperature)
library(XML)
library(googleVis) # requires googleVis 0.4.3 or higher
url <- "http://en.wikipedia.org/wiki/List_of_countries_by_credit_rating"
page <- readLines(url)
gvisCountryRating <- function(rating.agent="S&P", which=3,
startRating=4, skip=1, page=page){
x <- readHTMLTable(page, which=which, skip.rows=skip, header=TRUE)
levels(x$Rating) <- substring(levels(x$Rating), startRating,
nchar(levels(x$Rating)))
levels(x$Country)<- gsub("\302\240","",levels(x$Country))
x$Ranking <- x$Rating
levels(x$Ranking) <- nlevels(x$Rating):1
x$Ranking <- as.character(x$Ranking)
x$Rating <- paste0(x$Country,": ", x$Rating, " ", x$Outlook)
library(XML)
library(googleVis) # requires googleVis 0.4.3 or higher
url <- "http://en.wikipedia.org/wiki/List_of_countries_by_credit_rating"
page <- readLines(url)
install.packages(XML)
install.packages("XML")
library(XML)
library(googleVis) # requires googleVis 0.4.3 or higher
url <- "http://en.wikipedia.org/wiki/List_of_countries_by_credit_rating"
page <- readLines(url)
gvisCountryRating <- function(rating.agent="S&P", which=3,
startRating=4, skip=1, page=page){
x <- readHTMLTable(page, which=which, skip.rows=skip, header=TRUE)
levels(x$Rating) <- substring(levels(x$Rating), startRating,
nchar(levels(x$Rating)))
levels(x$Country)<- gsub("\302\240","",levels(x$Country))
x$Ranking <- x$Rating
levels(x$Ranking) <- nlevels(x$Rating):1
x$Ranking <- as.character(x$Ranking)
x$Rating <- paste0(x$Country,": ", x$Rating, " ", x$Outlook)
)
geo_temperature=gvisGeoChart(df_mera_temp_month,"LatLong",colorvar ='AT',sizevar='ELEVATION',
options=list(region="US",gvis.editor='AT',projection="kavrayskiy-vii",colors="['#91BFDB', '#FC8D59']"))
plot(geo_temperature)
geo_temperature=gvisGeoChart(df_mera_temp_month,"LatLong",colorvar ='AT',sizevar='ELEVATION',
options=list(region="US",gvis.editor='ELEVATION',projection="kavrayskiy-vii",colors="['#91BFDB', '#FC8D59']"))
plot(geo_temperature)
geo_temperature=gvisGeoChart(df_mera_temp_month,"LatLong",colorvar ='AT',sizevar='ELEVATION',
options=list(region="US",projection="kavrayskiy-vii",colors="['#91BFDB', '#FC8D59']"))
plot(geo_temperature)
geo_temperature=gvisGeoChart(df_mera_temp_month,"LatLong",colorvar ='AT',sizevar='ELEVATION',
options=list(region="US",colors="['#91BFDB', '#FC8D59']"))
plot(geo_temperature)
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',
options=list(region="US",resolution="provinces",colors="['#91BFDB', '#FC8D59']"))
f_traffic=read.csv("Traffic.csv",stringsAsFactors = FALSE)[,seq(1,6)]
year=2001 #input from dropdown menu
df_traffic_year=inner_join(df_traffic %>% filter(YEAR==year),df_gps,by.x=c("STATE_CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP_ID"))
colnames(df_traffic_year)[6]="ESAL"
colnames(df_traffic_year)[7]="Lat"
colnames(df_traffic_year)[8]="Long"
df_traffic_year=df_traffic_year %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
df_traffic_year=df_traffic_year %>% select(STATE_CODE_EXP,Lat,Long,ELEVATION,ESAL,YEAR)
df_traffic_year=df_traffic_year %>% mutate(LatLong=paste(Lat,Long,sep=":"))
df_traffic=read.csv("Traffic.csv",stringsAsFactors = FALSE)[,seq(1,6)]
year=2001 #input from dropdown menu
df_traffic_year=inner_join(df_traffic %>% filter(YEAR==year),df_gps,by.x=c("STATE_CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP_ID"))
colnames(df_traffic_year)[6]="ESAL"
colnames(df_traffic_year)[7]="Lat"
colnames(df_traffic_year)[8]="Long"
df_traffic_year=df_traffic_year %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
df_traffic_year=df_traffic_year %>% select(STATE_CODE_EXP,Lat,Long,ELEVATION,ESAL,YEAR)
df_traffic_year=df_traffic_year %>% mutate(LatLong=paste(Lat,Long,sep=":"))
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',
options=list(region="US",resolution="provinces",colors="['#91BFDB', '#FC8D59']"))
plot(geo_traffic)
View(df_traffic_year)
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',sizevar='ELEVATION',
options=list(region="US",resolution="provinces",colors="['#91BFDB', '#FC8D59']"))
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", sizevar='ESAL',sizevar='ELEVATION',
options=list(region="US",resolution="provinces",colors="['#91BFDB', '#FC8D59']"))
plot(geo_traffic)
plot(geo_temperature)
plot(geo_traffic)
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", colorvar='ESAL',sizevar='ELEVATION',
options=list(region="US",resolution="provinces",colors="['#91BFDB', '#FC8D59']"))
plot(geo_traffic)
geo_temperature=gvisGeoChart(df_mera_temp_month,"LatLong",colorvar ='AT',sizevar='ELEVATION',
options=list(region="US",colors="['#0713f2', '#ed1109']"))
plot(geo_temperature)
geo_traffic=gvisGeoChart(df_traffic_year, "LatLong", colorvar='ESAL',sizevar='ELEVATION',
options=list(region="US",resolution="provinces",colors="['#f5faf8', '#4d4f4c']"))
plot(geo_traffic)
df_traffic_year$ELEVATION
df_subgrade=read.csv("Subgrade.csv",stringsAsFactors = FALSE)
View(df_subgrade)
x=sum(unique(df_subgrade$CONSTRUCTION_NO)!=1)
x
df_subgrade=df_subgrade %>% select(LINKED_SHRP_ID,STATE_CODE,SHRP_ID,SOIL_MOD_CORRECTED)
View(df_gps)
df_subgrade=inner_join(df_subgrade,df_gps,by.x=c("STATE_CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP_ID"))
df_subgrade=inner_join(df_subgrade,df_gps,by.x=c("STATE_CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP_ID")) %>% select(STATE_CODE_EXP,SHRP_ID,LATITUDE,LONGITUDE,ELEVATION)
View(df_subgrade)
df_subgrade=inner_join(df_subgrade,df_gps,by.x=c("STATE_CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP_ID")) %>% select(STATE_CODE_EXP,SHRP_ID,LATITUDE,LONGITUDE,ELEVATION) %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))[,c(1,2,5,6)]
df_subgrade=inner_join(df_subgrade,df_gps,by.x=c("STATE_CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP_ID")) %>% select(STATE_CODE_EXP,SHRP_ID,LATITUDE,LONGITUDE,ELEVATION) %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))
View(df_subgrade)
df_subgrade=df_subgrade %>% select(STATE_CODE_EXP,SHRP_ID,ELEVATION,LatLong)
View(df_subgrade)
df_subgrade=read.csv("Subgrade.csv",stringsAsFactors = FALSE)%>% select(LINKED_SHRP_ID,STATE_CODE,SHRP_ID,SOIL_MOD_CORRECTED)
df_subgrade=inner_join(df_subgrade,df_gps,by.x=c("STATE_CODE","SHRP_ID"),by.y=c("STATE_CODE","SHRP_ID")) %>% select(STATE_CODE_EXP,SHRP_ID,LATITUDE,LONGITUDE,ELEVATION,SOIL_MOD_CORRECTED) %>% mutate(LatLong=paste(LATITUDE,LONGITUDE,sep = ":"))
df_subgrade=df_subgrade %>% select(STATE_CODE_EXP,SHRP_ID,ELEVATION,LatLong,SOIL_MOD_CORRECTED)
geo_subgrade=gvisGeoChart(df_subgrade, "LatLong", colorvar='SOIL_MOD_CORRECTED',sizevar='ELEVATION',
options=list(region="US",resolution="provinces",colors="['#f5faf8', '#4d4f4c']"))
plot(geo_subgrade)
geo_subgrade=gvisGeoChart(df_subgrade, "LatLong", colorvar='SOIL_MOD_CORRECTED',sizevar='ELEVATION',
options=list(region="US",resolution="provinces",colors="['#0713f2', '#ed1109']"))
plot(geo_subgrade)
View(df_subgrade)
geo_subgrade=gvisGeoChart(df_subgrade, "LatLong", colorvar='SOIL_MOD_CORRECTED',
options=list(region="US",resolution="provinces",colors="['#0713f2', '#ed1109']"))
plot(geo_subgrade)
x=unique(df_subgrade$STATE_CODE_EXP)
View(x)
geo_subgrade=gvisGeoChart(df_subgrade, "LatLong", colorvar='SOIL_MOD_CORRECTED',sizevar='ELEVATION',
options=list(region="US",resolution="provinces",colors="['#0713f2', '#ed1109']"))
plot(geo_subgrade)
geo_subgrade=gvisGeoChart(df_subgrade, "LatLong", colorvar='SOIL_MOD_CORRECTED',sizevar='ELEVATION',
options=list(region="US",resolution="mcities",colors="['#0713f2', '#ed1109']"))
plot(geo_subgrade)
geo_subgrade=gvisGeoChart(df_subgrade, "LatLong", colorvar='SOIL_MOD_CORRECTED',sizevar='ELEVATION',
options=list(region="US",colors="['#0713f2', '#ed1109']"))
plot(geo_subgrade)
plot(geo_subgrade)
df_IRI=read.csv("IRI.csv",stringsAsFactors = FALSE)
View(df_IRI)
df_IRI=df_IRI %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
df_IRI=df_IRI %>% filter(!(STATE_CODE_EXP %in%Out_of_US)) %>% select(STATE_CODE,SHRP_ID,VISIT_DATE,IRI_LEFT_WHEEL_PATH,IRI_RIGHT_WHEEL_PATH,CONSTRUCTION_NO)
View(df_IRI)
df_IRI=read.csv("IRI.csv",stringsAsFactors = FALSE)
df_IRI=df_IRI %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
View(df_IRI)
df_IRI=df_IRI %>% filter(!(STATE_CODE_EXP %in%Out_of_US)) %>% select(STATE_CODE,STATE_CODE_EXP,SHRP_ID,VISIT_DATE,IRI_LEFT_WHEEL_PATH,IRI_RIGHT_WHEEL_PATH,CONSTRUCTION_NO)
View(df_IRI)
#IRI
df_IRI=read.csv("IRI.csv",stringsAsFactors = FALSE)
df_IRI=df_IRI %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
df_IRI=df_IRI %>% filter(!(STATE_CODE_EXP %in%Out_of_US)) %>% select(STATE_CODE,STATE_CODE_EXP,SHRP_ID,VISIT_DATE,IRI_LEFT_WHEEL_PATH,IRI_RIGHT_WHEEL_PATH,CONSTRUCTION_NO)
df_IRI=df_IRI %>% mutate(IRI_ave=mean(IRI_LEFT_WHEEL_PATH,IRI_RIGHT_WHEEL_PATH))
df_IRI=df_IRI %>% mutate(IRI_ave=ave(IRI_LEFT_WHEEL_PATH,IRI_RIGHT_WHEEL_PATH))
df_IRI$VISIT_DATE=as.Date(df_IRI$VISIT_DATE)
df_IRI$VISIT_DATE=as.Date(df_IRI$VISIT_DATE,format ="%m/%d/%Y")
df_IRI=DF_IRI %>% group_by(STATE_CODE,SHRP_ID) %>% arrange(VISIT_DATE)
df_IRI=df_IRI %>% group_by(STATE_CODE,SHRP_ID) %>% arrange(VISIT_DATE)
df_IRI=df_IRI %>% group_by(STATE_CODE,SHRP_ID) %>% arrange(VISIT_DATE,CONSTRUCTION_NO)
df=df_IRI %>% filter(SHRP_ID==7049)
View(df)
df=df_IRI %>% filter(STATE_CODE==41)
View(df)
df=df_IRI %>% filter(STATE_CODE==41 & SHRP_ID==7019)
View(df_pavement_info)
df_pavement_info_ac_only=df_pavement_info %>% filter(LAYER_TYPE=="AC")
View(df_pavement_info_ac_only)
df_pavement_info_ac_only=df_pavement_info %>% filter(LAYER_TYPE=="AC") %>% group_by(STATE_CODE_EXP,SHRP_ID,CONSTRUCTION_NO) %>% summarise(ac_th=sum(PER_THICKNESS))
df_pavement_info_ac_only=df_pavement_info %>% filter(LAYER_TYPE=="AC") %>% group_by(STATE_CODE_EXP,SHRP_ID,CONSTRUCTION_NO) %>% summarise(ac_th=sum("PER_THICKNESS"))
colnames(df_pavement_info_ac_only)
df_pavement_info_ac_only=df_pavement_info %>% filter(LAYER_TYPE=="AC") %>% group_by(STATE_CODE_EXP,SHRP_ID,CONSTRUCTION_NO) %>% summarise(ac_th=sum(REPR_THICKNESS))
df_IRI=read.csv("IRI.csv",stringsAsFactors = FALSE)
df_IRI=df_IRI %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
df_IRI=df_IRI %>% filter(!(STATE_CODE_EXP %in%Out_of_US)) %>% select(STATE_CODE,STATE_CODE_EXP,SHRP_ID,VISIT_DATE,IRI_LEFT_WHEEL_PATH,IRI_RIGHT_WHEEL_PATH,CONSTRUCTION_NO)
df_IRI=df_IRI %>% mutate(IRI_ave=ave(IRI_LEFT_WHEEL_PATH,IRI_RIGHT_WHEEL_PATH))
df_IRI$VISIT_DATE=as.Date(df_IRI$VISIT_DATE,format ="%m/%d/%Y")
df_IRI=df_IRI %>% group_by(STATE_CODE,SHRP_ID) %>% arrange(VISIT_DATE,CONSTRUCTION_NO)
df_IRI=read.csv("IRI.csv",stringsAsFactors = FALSE)
df_IRI=df_IRI %>% filter(!(STATE_CODE_EXP %in%Out_of_US))
df_IRI=df_IRI %>% filter(!(STATE_CODE_EXP %in%Out_of_US)) %>% select(STATE_CODE,STATE_CODE_EXP,SHRP_ID,VISIT_DATE,IRI_LEFT_WHEEL_PATH,IRI_RIGHT_WHEEL_PATH,CONSTRUCTION_NO)
df_IRI=df_IRI %>% mutate(IRI_ave=ave(IRI_LEFT_WHEEL_PATH,IRI_RIGHT_WHEEL_PATH))
df_IRI$VISIT_DATE=as.Date(df_IRI$VISIT_DATE,format ="%m/%d/%Y")
df_IRI=df_IRI %>% group_by(STATE_CODE,SHRP_ID) %>% arrange(VISIT_DATE,CONSTRUCTION_NO)
df=df_pavement_info %>% filter(STATE_CODE_EXP=="Alabama" & CONSTRUCTION_NO==1)
View(df)
df=df_pavement_info %>% filter(STATE_CODE_EXP=="Alabama" & CONSTRUCTION_NO==1) %>% arrange(SHRP_ID)
df=df_pavement_info %>% filter(LAYER_NO=="AC",STATE_CODE_EXP=="Alabama" & CONSTRUCTION_NO==1) %>% arrange(SHRP_ID)
View(df)
View(df)
df=df_pavement_info %>% filter(STATE_CODE_EXP=="Alabama" & CONSTRUCTION_NO==1) %>% arrange(SHRP_ID)
View(df)
df=df_pavement_info %>% filter(STATE_CODE_EXP=="Alabama" & CONSTRUCTION_NO==1) %>% arrange(SHRP_ID) %>% filter(SHRP_ID==0102)
View(df)
df=df_pavement_info %>% filter(STATE_CODE_EXP=="Alabama") %>% arrange(SHRP_ID) %>% filter(SHRP_ID==0102)
df=df_pavement_info %>% filter(STATE_CODE_EXP=="Alabama") %>% arrange(SHRP_ID) %>% filter(SHRP_ID=="0102")
View(df)
df_pavement_info_ac_only=df_pavement_info %>% filter(LAYER_TYPE=="AC") %>% group_by(STATE_CODE_EXP,SHRP_ID,CONSTRUCTION_NO) %>% summarise(ac_th=sum(PEPR_THICKNESS))
colnames(df_pavement_info_ac_only)
colnames(df_pavement_info)
df_pavement_info_ac_only=df_pavement_info %>% filter(LAYER_TYPE=="AC") %>% group_by(STATE_CODE_EXP,SHRP_ID,CONSTRUCTION_NO) %>% summarise(ac_th=sum(REPR_THICKNESS))
